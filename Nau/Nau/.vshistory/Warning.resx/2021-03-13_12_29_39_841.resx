<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>